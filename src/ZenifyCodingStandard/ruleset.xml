<?xml version="1.0" ?>
<ruleset name="Zenify">
    <description>The Zenify coding standard.</description>

    <!-- Classes -->
    <rule ref="./Sniffs/Classes/ClassDeclarationSniff.php" />

    <!-- Commenting -->
    <rule ref="./Sniffs/Commenting/BlockPropertyCommentSniff.php" />
    <rule ref="./Sniffs/Commenting/ComponentFactoryCommentSniff.php" />

    <!-- Control Structures -->
    <rule ref="./Sniffs/ControlStructures/SwitchDeclarationSniff.php" />
    <rule ref="./Sniffs/ControlStructures/ControlSignatureSniff.php" />
    <rule ref="./Sniffs/ControlStructures/WeakTypesComparisonsWithExplanationSniff.php" />

    <!-- Namespace -->
    <rule ref="./Sniffs/Namespaces/NamespaceDeclarationSniff.php" />
    <rule ref="./Sniffs/Namespaces/UseDeclarationSniff.php">
        <properties>
            <property name="blankLinesAfterUseStatement" value="2" />
        </properties>
    </rule>

    <!-- Scope -->
    <rule ref="./Sniffs/Scope/MethodScopeSniff.php" />

    <!--Whitespace -->
    <rule ref="./Sniffs/Whitespace/ConcatOperatorSniff.php" />
    <rule ref="./Sniffs/Whitespace/ExclamationMarkSniff.php" />
    <rule ref="./Sniffs/Whitespace/IfElseSniff.php" />
    <rule ref="./Sniffs/Whitespace/InBetweenMethodSpacingSniff.php">
        <properties>
            <property name="blankLinesBetweenMethods" value="2" />
        </properties>
    </rule>
    <rule ref="./Sniffs/Whitespace/PropertiesMethodsMutualSpacingSniff.php">
        <properties>
            <property name="blankLinesBetweenPropertiesAndMethods" value="2" />
        </properties>
    </rule>


    <!-- PHP_CodeSniffer default sets -->


    <!-- CodeAnalysis -->
    <rule ref="Generic.CodeAnalysis.EmptyStatement" />
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />

    <!-- Files -->
    <rule ref="Generic.Files.ByteOrderMark" />
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120" />
            <property name="absoluteLineLimit" value="120" />
        </properties>
        <severity>3</severity>
    </rule>
    <rule ref="Generic.Files.OneInterfacePerFile" />
    <rule ref="PSR1.Files.SideEffects" />
    <rule ref="PSR2.Files.EndFileNewline" />
    <rule ref="Zend.Files.ClosingTag" />

    <!-- Classes -->
    <rule ref="Generic.Classes.DuplicateClassName" />
    <rule ref="Squiz.Classes.ClassDeclaration.SpaceAfterName">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Classes.ClassDeclaration.EndFileAfterCloseBrace">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Classes.ValidClassName" />
    <rule ref="Squiz.Classes.LowercaseClassKeywords" />
    <rule ref="PSR1.Classes.ClassDeclaration" />
    <rule ref="PSR1.Classes.ClassDeclaration.MultipleClasses" />
    <rule ref="PSR2.Classes.PropertyDeclaration" />

    <!-- ControlStructures -->
    <rule ref="Generic.ControlStructures.InlineControlStructure" />
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration" />
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration" />
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration" />
    <rule ref="PEAR.ControlStructures.MultiLineCondition">
        <properties>
            <property name="indent" value="1" />
        </properties>
    </rule>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration" />

    <!-- Formatting -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements" />
    <rule ref="Generic.Formatting.DisallowMultipleStatements.SameLine"><severity>0</severity></rule>
    <rule ref="Generic.Formatting.SpaceAfterCast" />

    <!-- Functions -->
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing" />
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman" />
    <rule ref="PEAR.Functions.ValidDefaultValue" />
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="indent" value="1" />
        </properties>
    </rule>
    <rule ref="Squiz.Functions.FunctionDeclaration" />
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1" />
        </properties>
    </rule>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration" />
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords" />

    <!-- Methods -->
    <rule ref="PSR2.Methods.MethodDeclaration" />

    <!-- Metrics -->
    <rule ref="Generic.Metrics.CyclomaticComplexity" />
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="3" />
            <property name="absoluteNestingLevel" value="6" />
        </properties>
    </rule>

    <!-- NamingConventions -->
    <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName" />

    <!-- PHP -->
    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.PHP.UpperCaseConstant" />
    <rule ref="MySource.PHP.EvalObjectFactory" />
    <rule ref="MySource.PHP.GetRequestData" />
    <rule ref="Squiz.PHP.NonExecutableCode" />

    <!-- WhiteSpace -->
    <rule ref="Generic.WhiteSpace.DisallowSpaceIndent" />
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing" />
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing" />
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />
    <rule ref="Squiz.WhiteSpace.OperatorSpacing" />
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing" />
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace" />
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false" />
        </properties>
    </rule>
</ruleset>
